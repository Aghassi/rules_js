"@generated by @aspect_rules_js//npm/private:translate_pnpm_lock.bzl from pnpm lock file @//:pnpm-lock.yaml"

load("@aspect_rules_js//npm/private:linked_npm_packages.bzl", "linked_npm_packages")
load("@npm__at_aspect-test_a__5.0.0__links//:defs.bzl", link_0 = "link_npm_package")
load("@npm__at_aspect-test_b__5.0.0__links//:defs.bzl", link_1 = "link_npm_package")
load("@npm__at_aspect-test_c__1.0.0__links//:defs.bzl", link_2 = "link_npm_package")
load("@npm__at_aspect-test_c__2.0.0__links//:defs.bzl", link_3 = "link_npm_package")
load("@npm__at_aspect-test_d__2.0.0__at_aspect-test_c_1.0.0__links//:defs.bzl", link_4 = "link_npm_package")
load("@npm__at_aspect-test_d__2.0.0__at_aspect-test_c_2.0.0__links//:defs.bzl", link_5 = "link_npm_package")
load("@npm__at_gregmagolan_test-a__0.0.1__links//:defs.bzl", link_6 = "link_npm_package")
load("@npm__at_gregmagolan_test-b__0.0.2__links//:defs.bzl", link_7 = "link_npm_package")
load("@npm__at_polka_url__1.0.0-next.21__links//:defs.bzl", link_8 = "link_npm_package")
load("@npm__at_rollup_plugin-commonjs__21.1.0__rollup_2.70.2__links//:defs.bzl", link_9 = "link_npm_package")
load("@npm__at_rollup_pluginutils__3.1.0__rollup_2.70.2__links//:defs.bzl", link_10 = "link_npm_package")
load("@npm__at_types_estree__0.0.39__links//:defs.bzl", link_11 = "link_npm_package")
load("@npm__at_types_estree__0.0.51__links//:defs.bzl", link_12 = "link_npm_package")
load("@npm__at_types_node__16.11.36__links//:defs.bzl", link_13 = "link_npm_package")
load("@npm__at_ungap_promise-all-settled__1.1.2__links//:defs.bzl", link_14 = "link_npm_package")
load("@npm__acorn-walk__8.2.0__links//:defs.bzl", link_15 = "link_npm_package")
load("@npm__acorn__8.7.1__links//:defs.bzl", link_16 = "link_npm_package")
load("@npm__ansi-colors__4.1.1__links//:defs.bzl", link_17 = "link_npm_package")
load("@npm__ansi-regex__5.0.1__links//:defs.bzl", link_18 = "link_npm_package")
load("@npm__ansi-styles__4.3.0__links//:defs.bzl", link_19 = "link_npm_package")
load("@npm__anymatch__3.1.2__links//:defs.bzl", link_20 = "link_npm_package")
load("@npm__argparse__2.0.1__links//:defs.bzl", link_21 = "link_npm_package")
load("@npm__balanced-match__1.0.2__links//:defs.bzl", link_22 = "link_npm_package")
load("@npm__binary-extensions__2.2.0__links//:defs.bzl", link_23 = "link_npm_package")
load("@npm__brace-expansion__1.1.11__links//:defs.bzl", link_24 = "link_npm_package")
load("@npm__brace-expansion__2.0.1__links//:defs.bzl", link_25 = "link_npm_package")
load("@npm__braces__3.0.2__links//:defs.bzl", link_26 = "link_npm_package")
load("@npm__browser-stdout__1.3.1__links//:defs.bzl", link_27 = "link_npm_package")
load("@npm__bufferutil__4.0.1__links//:defs.bzl", link_28 = "link_npm_package")
load("@npm__camelcase__6.3.0__links//:defs.bzl", link_29 = "link_npm_package")
load("@npm__chalk__4.1.2__links//:defs.bzl", link_30 = "link_npm_package")
load("@npm__charenc__0.0.2__links//:defs.bzl", link_31 = "link_npm_package")
load("@npm__chokidar__3.5.3__links//:defs.bzl", link_32 = "link_npm_package")
load("@npm__cliui__7.0.4__links//:defs.bzl", link_33 = "link_npm_package")
load("@npm__color-convert__2.0.1__links//:defs.bzl", link_34 = "link_npm_package")
load("@npm__color-name__1.1.4__links//:defs.bzl", link_35 = "link_npm_package")
load("@npm__commander__7.2.0__links//:defs.bzl", link_36 = "link_npm_package")
load("@npm__commondir__1.0.1__links//:defs.bzl", link_37 = "link_npm_package")
load("@npm__concat-map__0.0.1__links//:defs.bzl", link_38 = "link_npm_package")
load("@npm__crypt__0.0.2__links//:defs.bzl", link_39 = "link_npm_package")
load("@npm__debug__2.6.9__links//:defs.bzl", link_40 = "link_npm_package")
load("@npm__debug__4.3.4__links//:defs.bzl", link_41 = "link_npm_package")
load("@npm__debug__4.3.4__supports-color_8.1.1__links//:defs.bzl", link_42 = "link_npm_package")
load("@npm__decamelize__4.0.0__links//:defs.bzl", link_43 = "link_npm_package")
load("@npm__dequal__2.0.2__links//:defs.bzl", link_44 = "link_npm_package")
load("@npm__diff__5.0.0__links//:defs.bzl", link_45 = "link_npm_package")
load("@npm__diff__5.1.0__links//:defs.bzl", link_46 = "link_npm_package")
load("@npm__duplexer__0.1.2__links//:defs.bzl", link_47 = "link_npm_package")
load("@npm__emoji-regex__8.0.0__links//:defs.bzl", link_48 = "link_npm_package")
load("@npm__esbuild-android-64__0.14.38__links//:defs.bzl", link_49 = "link_npm_package")
load("@npm__esbuild-android-arm64__0.14.38__links//:defs.bzl", link_50 = "link_npm_package")
load("@npm__esbuild-darwin-64__0.14.38__links//:defs.bzl", link_51 = "link_npm_package")
load("@npm__esbuild-darwin-arm64__0.14.38__links//:defs.bzl", link_52 = "link_npm_package")
load("@npm__esbuild-freebsd-64__0.14.38__links//:defs.bzl", link_53 = "link_npm_package")
load("@npm__esbuild-freebsd-arm64__0.14.38__links//:defs.bzl", link_54 = "link_npm_package")
load("@npm__esbuild-linux-32__0.14.38__links//:defs.bzl", link_55 = "link_npm_package")
load("@npm__esbuild-linux-64__0.14.38__links//:defs.bzl", link_56 = "link_npm_package")
load("@npm__esbuild-linux-arm__0.14.38__links//:defs.bzl", link_57 = "link_npm_package")
load("@npm__esbuild-linux-arm64__0.14.38__links//:defs.bzl", link_58 = "link_npm_package")
load("@npm__esbuild-linux-mips64le__0.14.38__links//:defs.bzl", link_59 = "link_npm_package")
load("@npm__esbuild-linux-ppc64le__0.14.38__links//:defs.bzl", link_60 = "link_npm_package")
load("@npm__esbuild-linux-riscv64__0.14.38__links//:defs.bzl", link_61 = "link_npm_package")
load("@npm__esbuild-linux-s390x__0.14.38__links//:defs.bzl", link_62 = "link_npm_package")
load("@npm__esbuild-netbsd-64__0.14.38__links//:defs.bzl", link_63 = "link_npm_package")
load("@npm__esbuild-openbsd-64__0.14.38__links//:defs.bzl", link_64 = "link_npm_package")
load("@npm__esbuild-sunos-64__0.14.38__links//:defs.bzl", link_65 = "link_npm_package")
load("@npm__esbuild-windows-32__0.14.38__links//:defs.bzl", link_66 = "link_npm_package")
load("@npm__esbuild-windows-64__0.14.38__links//:defs.bzl", link_67 = "link_npm_package")
load("@npm__esbuild-windows-arm64__0.14.38__links//:defs.bzl", link_68 = "link_npm_package")
load("@npm__esbuild__0.14.38__links//:defs.bzl", link_69 = "link_npm_package")
load("@npm__escalade__3.1.1__links//:defs.bzl", link_70 = "link_npm_package")
load("@npm__escape-string-regexp__4.0.0__links//:defs.bzl", link_71 = "link_npm_package")
load("@npm__esprima__1.0.0__links//:defs.bzl", link_72 = "link_npm_package")
load("@npm__estree-walker__1.0.1__links//:defs.bzl", link_73 = "link_npm_package")
load("@npm__estree-walker__2.0.2__links//:defs.bzl", link_74 = "link_npm_package")
load("@npm__fill-range__7.0.1__links//:defs.bzl", link_75 = "link_npm_package")
load("@npm__find-up__5.0.0__links//:defs.bzl", link_76 = "link_npm_package")
load("@npm__flat__5.0.2__links//:defs.bzl", link_77 = "link_npm_package")
load("@npm__fs.realpath__1.0.0__links//:defs.bzl", link_78 = "link_npm_package")
load("@npm__fsevents__2.3.2__links//:defs.bzl", link_79 = "link_npm_package")
load("@npm__function-bind__1.1.1__links//:defs.bzl", link_80 = "link_npm_package")
load("@npm__get-caller-file__2.0.5__links//:defs.bzl", link_81 = "link_npm_package")
load("@npm__glob-parent__5.1.2__links//:defs.bzl", link_82 = "link_npm_package")
load("@npm__glob__7.2.0__links//:defs.bzl", link_83 = "link_npm_package")
load("@npm__glob__7.2.3__links//:defs.bzl", link_84 = "link_npm_package")
load("@npm__gzip-size__6.0.0__links//:defs.bzl", link_85 = "link_npm_package")
load("@npm__has-flag__4.0.0__links//:defs.bzl", link_86 = "link_npm_package")
load("@npm__has__1.0.3__links//:defs.bzl", link_87 = "link_npm_package")
load("@npm__he__1.2.0__links//:defs.bzl", link_88 = "link_npm_package")
load("@npm__inflight__1.0.6__links//:defs.bzl", link_89 = "link_npm_package")
load("@npm__inherits__2.0.4__links//:defs.bzl", link_90 = "link_npm_package")
load("@npm__is-binary-path__2.1.0__links//:defs.bzl", link_91 = "link_npm_package")
load("@npm__is-buffer__1.1.6__links//:defs.bzl", link_92 = "link_npm_package")
load("@npm__is-core-module__2.9.0__links//:defs.bzl", link_93 = "link_npm_package")
load("@npm__is-extglob__2.1.1__links//:defs.bzl", link_94 = "link_npm_package")
load("@npm__is-fullwidth-code-point__3.0.0__links//:defs.bzl", link_95 = "link_npm_package")
load("@npm__is-glob__4.0.3__links//:defs.bzl", link_96 = "link_npm_package")
load("@npm__is-number__7.0.0__links//:defs.bzl", link_97 = "link_npm_package")
load("@npm__is-plain-obj__2.1.0__links//:defs.bzl", link_98 = "link_npm_package")
load("@npm__is-reference__1.2.1__links//:defs.bzl", link_99 = "link_npm_package")
load("@npm__is-unicode-supported__0.1.0__links//:defs.bzl", link_100 = "link_npm_package")
load("@npm__js-tokens__4.0.0__links//:defs.bzl", link_101 = "link_npm_package")
load("@npm__js-yaml__4.1.0__links//:defs.bzl", link_102 = "link_npm_package")
load("@npm__kleur__4.1.4__links//:defs.bzl", link_103 = "link_npm_package")
load("@npm__locate-path__6.0.0__links//:defs.bzl", link_104 = "link_npm_package")
load("@npm__lodash__4.17.21__links//:defs.bzl", link_105 = "link_npm_package")
load("@npm__log-symbols__4.1.0__links//:defs.bzl", link_106 = "link_npm_package")
load("@npm__loose-envify__1.4.0__links//:defs.bzl", link_107 = "link_npm_package")
load("@npm__magic-string__0.25.9__links//:defs.bzl", link_108 = "link_npm_package")
load("@npm__md5__2.3.0__links//:defs.bzl", link_109 = "link_npm_package")
load("@npm__minimatch__3.1.2__links//:defs.bzl", link_110 = "link_npm_package")
load("@npm__minimatch__5.0.1__links//:defs.bzl", link_111 = "link_npm_package")
load("@npm__minimist__0.0.10__links//:defs.bzl", link_112 = "link_npm_package")
load("@npm__minimist__1.2.6__links//:defs.bzl", link_113 = "link_npm_package")
load("@npm__mkdirp__0.5.6__links//:defs.bzl", link_114 = "link_npm_package")
load("@npm__mobx-react-lite__3.4.0__mobx_6.3.0_react_17.0.2__links//:defs.bzl", link_115 = "link_npm_package")
load("@npm__mobx-react__7.3.0__mobx_6.3.0_react_17.0.2__links//:defs.bzl", link_116 = "link_npm_package")
load("@npm__mobx__6.3.0__links//:defs.bzl", link_117 = "link_npm_package")
load("@npm__mocha-junit-reporter__2.0.2__mocha_10.0.0__links//:defs.bzl", link_118 = "link_npm_package")
load("@npm__mocha-multi-reporters__1.5.1__mocha_10.0.0__links//:defs.bzl", link_119 = "link_npm_package")
load("@npm__mocha__10.0.0__th2rfume6p4m5jxelm27wrhnly__links//:defs.bzl", link_120 = "link_npm_package")
load("@npm__mri__1.2.0__links//:defs.bzl", link_121 = "link_npm_package")
load("@npm__mrmime__1.0.0__links//:defs.bzl", link_122 = "link_npm_package")
load("@npm__ms__2.0.0__links//:defs.bzl", link_123 = "link_npm_package")
load("@npm__ms__2.1.2__links//:defs.bzl", link_124 = "link_npm_package")
load("@npm__ms__2.1.3__links//:defs.bzl", link_125 = "link_npm_package")
load("@npm__nanoid__3.3.3__links//:defs.bzl", link_126 = "link_npm_package")
load("@npm__node-gyp-build__3.7.0__links//:defs.bzl", link_127 = "link_npm_package")
load("@npm__normalize-path__3.0.0__links//:defs.bzl", link_128 = "link_npm_package")
load("@npm__object-assign__4.1.1__links//:defs.bzl", link_129 = "link_npm_package")
load("@npm__once__1.4.0__links//:defs.bzl", link_130 = "link_npm_package")
load("@npm__opener__1.5.2__links//:defs.bzl", link_131 = "link_npm_package")
load("@npm__optimist__0.6.0__links//:defs.bzl", link_132 = "link_npm_package")
load("@npm__p-limit__3.1.0__links//:defs.bzl", link_133 = "link_npm_package")
load("@npm__p-locate__5.0.0__links//:defs.bzl", link_134 = "link_npm_package")
load("@npm__path-exists__4.0.0__links//:defs.bzl", link_135 = "link_npm_package")
load("@npm__path-is-absolute__1.0.1__links//:defs.bzl", link_136 = "link_npm_package")
load("@npm__path-parse__1.0.7__links//:defs.bzl", link_137 = "link_npm_package")
load("@npm__picomatch__2.3.1__links//:defs.bzl", link_138 = "link_npm_package")
load("@npm__randombytes__2.1.0__links//:defs.bzl", link_139 = "link_npm_package")
load("@npm__react__17.0.2__links//:defs.bzl", link_140 = "link_npm_package")
load("@npm__readdirp__3.6.0__links//:defs.bzl", link_141 = "link_npm_package")
load("@npm__require-directory__2.1.1__links//:defs.bzl", link_142 = "link_npm_package")
load("@npm__resolve__1.22.0__links//:defs.bzl", link_143 = "link_npm_package")
load("@npm__rollup__2.70.2__links//:defs.bzl", link_144 = "link_npm_package")
load("@npm__sade__1.8.1__links//:defs.bzl", link_145 = "link_npm_package")
load("@npm__safe-buffer__5.2.1__links//:defs.bzl", link_146 = "link_npm_package")
load("@npm__serialize-javascript__6.0.0__links//:defs.bzl", link_147 = "link_npm_package")
load("@npm__sirv__1.0.19__links//:defs.bzl", link_148 = "link_npm_package")
load("@npm__sourcemap-codec__1.4.8__links//:defs.bzl", link_149 = "link_npm_package")
load("@npm__string-width__4.2.3__links//:defs.bzl", link_150 = "link_npm_package")
load("@npm__strip-ansi__6.0.1__links//:defs.bzl", link_151 = "link_npm_package")
load("@npm__strip-json-comments__3.1.1__links//:defs.bzl", link_152 = "link_npm_package")
load("@npm__supports-color__7.2.0__links//:defs.bzl", link_153 = "link_npm_package")
load("@npm__supports-color__8.1.1__links//:defs.bzl", link_154 = "link_npm_package")
load("@npm__supports-preserve-symlinks-flag__1.0.0__links//:defs.bzl", link_155 = "link_npm_package")
load("@npm__to-regex-range__5.0.1__links//:defs.bzl", link_156 = "link_npm_package")
load("@npm__totalist__1.1.0__links//:defs.bzl", link_157 = "link_npm_package")
load("@npm__typescript__4.7.2__links//:defs.bzl", link_158 = "link_npm_package")
load("@npm__unused__0.2.2__links//:defs.bzl", link_159 = "link_npm_package")
load("@npm__uvu__0.5.3__links//:defs.bzl", link_160 = "link_npm_package")
load("@npm__webpack-bundle-analyzer__4.5.0__bufferutil_4.0.1__links//:defs.bzl", link_161 = "link_npm_package")
load("@npm__wordwrap__0.0.3__links//:defs.bzl", link_162 = "link_npm_package")
load("@npm__workerpool__6.2.1__links//:defs.bzl", link_163 = "link_npm_package")
load("@npm__wrap-ansi__7.0.0__links//:defs.bzl", link_164 = "link_npm_package")
load("@npm__wrappy__1.0.2__links//:defs.bzl", link_165 = "link_npm_package")
load("@npm__ws__7.5.8__bufferutil_4.0.1__links//:defs.bzl", link_166 = "link_npm_package")
load("@npm__xml__1.0.1__links//:defs.bzl", link_167 = "link_npm_package")
load("@npm__y18n__5.0.8__links//:defs.bzl", link_168 = "link_npm_package")
load("@npm__yargs-parser__20.2.4__links//:defs.bzl", link_169 = "link_npm_package")
load("@npm__yargs-unparser__2.0.0__links//:defs.bzl", link_170 = "link_npm_package")
load("@npm__yargs__16.2.0__links//:defs.bzl", link_171 = "link_npm_package")
load("@npm__yocto-queue__0.1.0__links//:defs.bzl", link_172 = "link_npm_package")

def link_all_npm_packages(name = "node_modules"):
    """Generated list of link_npm_package() target generators and first-party linked packages corresponding to the packages in @//:pnpm-lock.yaml

    Args:
        name: name of catch all target to generate for all packages linked
    """
    root_package = ""
    link_packages = ["", "examples/lib", "examples/macro", "examples/npm_deps", "npm/private/test"]
    is_root = native.package_name() == root_package
    is_direct = native.package_name() in link_packages
    if not is_root and not is_direct:
        msg = "The link_all_npm_packages() macro loaded from @npm//:defs.bzl and called in bazel package '%s' may only be called in the bazel package(s) corresponding to the root package '' and packages ['', 'examples/lib', 'examples/macro', 'examples/npm_deps', 'npm/private/test']" % native.package_name()
        fail(msg)
    direct_targets = []

    direct_targets.append(link_0(name = "direct_link__at_aspect-test_a", direct = None, fail_if_no_link = False))
    direct_targets.append(link_1(name = "direct_link__at_aspect-test_b", direct = None, fail_if_no_link = False))
    direct_targets.append(link_2(name = "direct_link__at_aspect-test_c", direct = None, fail_if_no_link = False))
    direct_targets.append(link_3(name = "direct_link__at_aspect-test_c", direct = None, fail_if_no_link = False))
    direct_targets.append(link_4(name = "direct_link__at_aspect-test_d", direct = None, fail_if_no_link = False))
    direct_targets.append(link_5(name = "direct_link__at_aspect-test_d", direct = None, fail_if_no_link = False))
    direct_targets.append(link_6(name = "direct_link__at_gregmagolan_test-a", direct = None, fail_if_no_link = False))
    direct_targets.append(link_7(name = "direct_link__at_gregmagolan_test-b", direct = None, fail_if_no_link = False))
    direct_targets.append(link_8(name = "direct_link__at_polka_url", direct = None, fail_if_no_link = False))
    direct_targets.append(link_9(name = "direct_link__at_rollup_plugin-commonjs", direct = None, fail_if_no_link = False))
    direct_targets.append(link_10(name = "direct_link__at_rollup_pluginutils", direct = None, fail_if_no_link = False))
    direct_targets.append(link_11(name = "direct_link__at_types_estree", direct = None, fail_if_no_link = False))
    direct_targets.append(link_12(name = "direct_link__at_types_estree", direct = None, fail_if_no_link = False))
    direct_targets.append(link_13(name = "direct_link__at_types_node", direct = None, fail_if_no_link = False))
    direct_targets.append(link_14(name = "direct_link__at_ungap_promise-all-settled", direct = None, fail_if_no_link = False))
    direct_targets.append(link_15(name = "direct_link__acorn-walk", direct = None, fail_if_no_link = False))
    direct_targets.append(link_16(name = "direct_link__acorn", direct = None, fail_if_no_link = False))
    direct_targets.append(link_17(name = "direct_link__ansi-colors", direct = None, fail_if_no_link = False))
    direct_targets.append(link_18(name = "direct_link__ansi-regex", direct = None, fail_if_no_link = False))
    direct_targets.append(link_19(name = "direct_link__ansi-styles", direct = None, fail_if_no_link = False))
    direct_targets.append(link_20(name = "direct_link__anymatch", direct = None, fail_if_no_link = False))
    direct_targets.append(link_21(name = "direct_link__argparse", direct = None, fail_if_no_link = False))
    direct_targets.append(link_22(name = "direct_link__balanced-match", direct = None, fail_if_no_link = False))
    direct_targets.append(link_23(name = "direct_link__binary-extensions", direct = None, fail_if_no_link = False))
    direct_targets.append(link_24(name = "direct_link__brace-expansion", direct = None, fail_if_no_link = False))
    direct_targets.append(link_25(name = "direct_link__brace-expansion", direct = None, fail_if_no_link = False))
    direct_targets.append(link_26(name = "direct_link__braces", direct = None, fail_if_no_link = False))
    direct_targets.append(link_27(name = "direct_link__browser-stdout", direct = None, fail_if_no_link = False))
    direct_targets.append(link_28(name = "direct_link__bufferutil", direct = None, fail_if_no_link = False))
    direct_targets.append(link_29(name = "direct_link__camelcase", direct = None, fail_if_no_link = False))
    direct_targets.append(link_30(name = "direct_link__chalk", direct = None, fail_if_no_link = False))
    direct_targets.append(link_31(name = "direct_link__charenc", direct = None, fail_if_no_link = False))
    direct_targets.append(link_32(name = "direct_link__chokidar", direct = None, fail_if_no_link = False))
    direct_targets.append(link_33(name = "direct_link__cliui", direct = None, fail_if_no_link = False))
    direct_targets.append(link_34(name = "direct_link__color-convert", direct = None, fail_if_no_link = False))
    direct_targets.append(link_35(name = "direct_link__color-name", direct = None, fail_if_no_link = False))
    direct_targets.append(link_36(name = "direct_link__commander", direct = None, fail_if_no_link = False))
    direct_targets.append(link_37(name = "direct_link__commondir", direct = None, fail_if_no_link = False))
    direct_targets.append(link_38(name = "direct_link__concat-map", direct = None, fail_if_no_link = False))
    direct_targets.append(link_39(name = "direct_link__crypt", direct = None, fail_if_no_link = False))
    direct_targets.append(link_40(name = "direct_link__debug", direct = None, fail_if_no_link = False))
    direct_targets.append(link_41(name = "direct_link__debug", direct = None, fail_if_no_link = False))
    direct_targets.append(link_42(name = "direct_link__debug", direct = None, fail_if_no_link = False))
    direct_targets.append(link_43(name = "direct_link__decamelize", direct = None, fail_if_no_link = False))
    direct_targets.append(link_44(name = "direct_link__dequal", direct = None, fail_if_no_link = False))
    direct_targets.append(link_45(name = "direct_link__diff", direct = None, fail_if_no_link = False))
    direct_targets.append(link_46(name = "direct_link__diff", direct = None, fail_if_no_link = False))
    direct_targets.append(link_47(name = "direct_link__duplexer", direct = None, fail_if_no_link = False))
    direct_targets.append(link_48(name = "direct_link__emoji-regex", direct = None, fail_if_no_link = False))
    direct_targets.append(link_49(name = "direct_link__esbuild-android-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_50(name = "direct_link__esbuild-android-arm64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_51(name = "direct_link__esbuild-darwin-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_52(name = "direct_link__esbuild-darwin-arm64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_53(name = "direct_link__esbuild-freebsd-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_54(name = "direct_link__esbuild-freebsd-arm64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_55(name = "direct_link__esbuild-linux-32", direct = None, fail_if_no_link = False))
    direct_targets.append(link_56(name = "direct_link__esbuild-linux-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_57(name = "direct_link__esbuild-linux-arm", direct = None, fail_if_no_link = False))
    direct_targets.append(link_58(name = "direct_link__esbuild-linux-arm64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_59(name = "direct_link__esbuild-linux-mips64le", direct = None, fail_if_no_link = False))
    direct_targets.append(link_60(name = "direct_link__esbuild-linux-ppc64le", direct = None, fail_if_no_link = False))
    direct_targets.append(link_61(name = "direct_link__esbuild-linux-riscv64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_62(name = "direct_link__esbuild-linux-s390x", direct = None, fail_if_no_link = False))
    direct_targets.append(link_63(name = "direct_link__esbuild-netbsd-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_64(name = "direct_link__esbuild-openbsd-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_65(name = "direct_link__esbuild-sunos-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_66(name = "direct_link__esbuild-windows-32", direct = None, fail_if_no_link = False))
    direct_targets.append(link_67(name = "direct_link__esbuild-windows-64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_68(name = "direct_link__esbuild-windows-arm64", direct = None, fail_if_no_link = False))
    direct_targets.append(link_69(name = "direct_link__esbuild", direct = None, fail_if_no_link = False))
    direct_targets.append(link_70(name = "direct_link__escalade", direct = None, fail_if_no_link = False))
    direct_targets.append(link_71(name = "direct_link__escape-string-regexp", direct = None, fail_if_no_link = False))
    direct_targets.append(link_72(name = "direct_link__esprima", direct = None, fail_if_no_link = False))
    direct_targets.append(link_73(name = "direct_link__estree-walker", direct = None, fail_if_no_link = False))
    direct_targets.append(link_74(name = "direct_link__estree-walker", direct = None, fail_if_no_link = False))
    direct_targets.append(link_75(name = "direct_link__fill-range", direct = None, fail_if_no_link = False))
    direct_targets.append(link_76(name = "direct_link__find-up", direct = None, fail_if_no_link = False))
    direct_targets.append(link_77(name = "direct_link__flat", direct = None, fail_if_no_link = False))
    direct_targets.append(link_78(name = "direct_link__fs.realpath", direct = None, fail_if_no_link = False))
    direct_targets.append(link_79(name = "direct_link__fsevents", direct = None, fail_if_no_link = False))
    direct_targets.append(link_80(name = "direct_link__function-bind", direct = None, fail_if_no_link = False))
    direct_targets.append(link_81(name = "direct_link__get-caller-file", direct = None, fail_if_no_link = False))
    direct_targets.append(link_82(name = "direct_link__glob-parent", direct = None, fail_if_no_link = False))
    direct_targets.append(link_83(name = "direct_link__glob", direct = None, fail_if_no_link = False))
    direct_targets.append(link_84(name = "direct_link__glob", direct = None, fail_if_no_link = False))
    direct_targets.append(link_85(name = "direct_link__gzip-size", direct = None, fail_if_no_link = False))
    direct_targets.append(link_86(name = "direct_link__has-flag", direct = None, fail_if_no_link = False))
    direct_targets.append(link_87(name = "direct_link__has", direct = None, fail_if_no_link = False))
    direct_targets.append(link_88(name = "direct_link__he", direct = None, fail_if_no_link = False))
    direct_targets.append(link_89(name = "direct_link__inflight", direct = None, fail_if_no_link = False))
    direct_targets.append(link_90(name = "direct_link__inherits", direct = None, fail_if_no_link = False))
    direct_targets.append(link_91(name = "direct_link__is-binary-path", direct = None, fail_if_no_link = False))
    direct_targets.append(link_92(name = "direct_link__is-buffer", direct = None, fail_if_no_link = False))
    direct_targets.append(link_93(name = "direct_link__is-core-module", direct = None, fail_if_no_link = False))
    direct_targets.append(link_94(name = "direct_link__is-extglob", direct = None, fail_if_no_link = False))
    direct_targets.append(link_95(name = "direct_link__is-fullwidth-code-point", direct = None, fail_if_no_link = False))
    direct_targets.append(link_96(name = "direct_link__is-glob", direct = None, fail_if_no_link = False))
    direct_targets.append(link_97(name = "direct_link__is-number", direct = None, fail_if_no_link = False))
    direct_targets.append(link_98(name = "direct_link__is-plain-obj", direct = None, fail_if_no_link = False))
    direct_targets.append(link_99(name = "direct_link__is-reference", direct = None, fail_if_no_link = False))
    direct_targets.append(link_100(name = "direct_link__is-unicode-supported", direct = None, fail_if_no_link = False))
    direct_targets.append(link_101(name = "direct_link__js-tokens", direct = None, fail_if_no_link = False))
    direct_targets.append(link_102(name = "direct_link__js-yaml", direct = None, fail_if_no_link = False))
    direct_targets.append(link_103(name = "direct_link__kleur", direct = None, fail_if_no_link = False))
    direct_targets.append(link_104(name = "direct_link__locate-path", direct = None, fail_if_no_link = False))
    direct_targets.append(link_105(name = "direct_link__lodash", direct = None, fail_if_no_link = False))
    direct_targets.append(link_106(name = "direct_link__log-symbols", direct = None, fail_if_no_link = False))
    direct_targets.append(link_107(name = "direct_link__loose-envify", direct = None, fail_if_no_link = False))
    direct_targets.append(link_108(name = "direct_link__magic-string", direct = None, fail_if_no_link = False))
    direct_targets.append(link_109(name = "direct_link__md5", direct = None, fail_if_no_link = False))
    direct_targets.append(link_110(name = "direct_link__minimatch", direct = None, fail_if_no_link = False))
    direct_targets.append(link_111(name = "direct_link__minimatch", direct = None, fail_if_no_link = False))
    direct_targets.append(link_112(name = "direct_link__minimist", direct = None, fail_if_no_link = False))
    direct_targets.append(link_113(name = "direct_link__minimist", direct = None, fail_if_no_link = False))
    direct_targets.append(link_114(name = "direct_link__mkdirp", direct = None, fail_if_no_link = False))
    direct_targets.append(link_115(name = "direct_link__mobx-react-lite", direct = None, fail_if_no_link = False))
    direct_targets.append(link_116(name = "direct_link__mobx-react", direct = None, fail_if_no_link = False))
    direct_targets.append(link_117(name = "direct_link__mobx", direct = None, fail_if_no_link = False))
    direct_targets.append(link_118(name = "direct_link__mocha-junit-reporter", direct = None, fail_if_no_link = False))
    direct_targets.append(link_119(name = "direct_link__mocha-multi-reporters", direct = None, fail_if_no_link = False))
    direct_targets.append(link_120(name = "direct_link__mocha", direct = None, fail_if_no_link = False))
    direct_targets.append(link_121(name = "direct_link__mri", direct = None, fail_if_no_link = False))
    direct_targets.append(link_122(name = "direct_link__mrmime", direct = None, fail_if_no_link = False))
    direct_targets.append(link_123(name = "direct_link__ms", direct = None, fail_if_no_link = False))
    direct_targets.append(link_124(name = "direct_link__ms", direct = None, fail_if_no_link = False))
    direct_targets.append(link_125(name = "direct_link__ms", direct = None, fail_if_no_link = False))
    direct_targets.append(link_126(name = "direct_link__nanoid", direct = None, fail_if_no_link = False))
    direct_targets.append(link_127(name = "direct_link__node-gyp-build", direct = None, fail_if_no_link = False))
    direct_targets.append(link_128(name = "direct_link__normalize-path", direct = None, fail_if_no_link = False))
    direct_targets.append(link_129(name = "direct_link__object-assign", direct = None, fail_if_no_link = False))
    direct_targets.append(link_130(name = "direct_link__once", direct = None, fail_if_no_link = False))
    direct_targets.append(link_131(name = "direct_link__opener", direct = None, fail_if_no_link = False))
    direct_targets.append(link_132(name = "direct_link__optimist", direct = None, fail_if_no_link = False))
    direct_targets.append(link_133(name = "direct_link__p-limit", direct = None, fail_if_no_link = False))
    direct_targets.append(link_134(name = "direct_link__p-locate", direct = None, fail_if_no_link = False))
    direct_targets.append(link_135(name = "direct_link__path-exists", direct = None, fail_if_no_link = False))
    direct_targets.append(link_136(name = "direct_link__path-is-absolute", direct = None, fail_if_no_link = False))
    direct_targets.append(link_137(name = "direct_link__path-parse", direct = None, fail_if_no_link = False))
    direct_targets.append(link_138(name = "direct_link__picomatch", direct = None, fail_if_no_link = False))
    direct_targets.append(link_139(name = "direct_link__randombytes", direct = None, fail_if_no_link = False))
    direct_targets.append(link_140(name = "direct_link__react", direct = None, fail_if_no_link = False))
    direct_targets.append(link_141(name = "direct_link__readdirp", direct = None, fail_if_no_link = False))
    direct_targets.append(link_142(name = "direct_link__require-directory", direct = None, fail_if_no_link = False))
    direct_targets.append(link_143(name = "direct_link__resolve", direct = None, fail_if_no_link = False))
    direct_targets.append(link_144(name = "direct_link__rollup", direct = None, fail_if_no_link = False))
    direct_targets.append(link_145(name = "direct_link__sade", direct = None, fail_if_no_link = False))
    direct_targets.append(link_146(name = "direct_link__safe-buffer", direct = None, fail_if_no_link = False))
    direct_targets.append(link_147(name = "direct_link__serialize-javascript", direct = None, fail_if_no_link = False))
    direct_targets.append(link_148(name = "direct_link__sirv", direct = None, fail_if_no_link = False))
    direct_targets.append(link_149(name = "direct_link__sourcemap-codec", direct = None, fail_if_no_link = False))
    direct_targets.append(link_150(name = "direct_link__string-width", direct = None, fail_if_no_link = False))
    direct_targets.append(link_151(name = "direct_link__strip-ansi", direct = None, fail_if_no_link = False))
    direct_targets.append(link_152(name = "direct_link__strip-json-comments", direct = None, fail_if_no_link = False))
    direct_targets.append(link_153(name = "direct_link__supports-color", direct = None, fail_if_no_link = False))
    direct_targets.append(link_154(name = "direct_link__supports-color", direct = None, fail_if_no_link = False))
    direct_targets.append(link_155(name = "direct_link__supports-preserve-symlinks-flag", direct = None, fail_if_no_link = False))
    direct_targets.append(link_156(name = "direct_link__to-regex-range", direct = None, fail_if_no_link = False))
    direct_targets.append(link_157(name = "direct_link__totalist", direct = None, fail_if_no_link = False))
    direct_targets.append(link_158(name = "direct_link__typescript", direct = None, fail_if_no_link = False))
    direct_targets.append(link_159(name = "direct_link__unused", direct = None, fail_if_no_link = False))
    direct_targets.append(link_160(name = "direct_link__uvu", direct = None, fail_if_no_link = False))
    direct_targets.append(link_161(name = "direct_link__webpack-bundle-analyzer", direct = None, fail_if_no_link = False))
    direct_targets.append(link_162(name = "direct_link__wordwrap", direct = None, fail_if_no_link = False))
    direct_targets.append(link_163(name = "direct_link__workerpool", direct = None, fail_if_no_link = False))
    direct_targets.append(link_164(name = "direct_link__wrap-ansi", direct = None, fail_if_no_link = False))
    direct_targets.append(link_165(name = "direct_link__wrappy", direct = None, fail_if_no_link = False))
    direct_targets.append(link_166(name = "direct_link__ws", direct = None, fail_if_no_link = False))
    direct_targets.append(link_167(name = "direct_link__xml", direct = None, fail_if_no_link = False))
    direct_targets.append(link_168(name = "direct_link__y18n", direct = None, fail_if_no_link = False))
    direct_targets.append(link_169(name = "direct_link__yargs-parser", direct = None, fail_if_no_link = False))
    direct_targets.append(link_170(name = "direct_link__yargs-unparser", direct = None, fail_if_no_link = False))
    direct_targets.append(link_171(name = "direct_link__yargs", direct = None, fail_if_no_link = False))
    direct_targets.append(link_172(name = "direct_link__yocto-queue", direct = None, fail_if_no_link = False))

    linked_npm_packages(
        name = name,
        srcs = [t for t in direct_targets if t],
        tags = ["manual"],
        visibility = ["//visibility:public"],
    )
